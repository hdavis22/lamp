"""fix trip id length

Revision ID: 1b53fd278b10
Revises: 5d9a7ee21ae5
Create Date: 2023-11-27 16:25:42.657967

Details
* upgrade -> change "trip_id" field from length 128 to 512
* upgrade -> add static service id lookup table

* downgrade -> change "trip_id" field from length 512 to 128
* downgrade -> drop static service id lookup table 
"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "1b53fd278b10"
down_revision = "5d9a7ee21ae5"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "static_service_id_lookup",
        sa.Column("dummy_pk", sa.Integer(), nullable=False),
        sa.Column("route_id", sa.String(length=60), nullable=True),
        sa.Column("service_id", sa.String(length=60), nullable=True),
        sa.Column("service_date", sa.Integer(), nullable=True),
        sa.Column("static_version_key", sa.Integer(), nullable=True),
        sa.PrimaryKeyConstraint("dummy_pk"),
    )
    op.alter_column(
        "static_route_patterns",
        "representative_trip_id",
        existing_type=sa.VARCHAR(length=128),
        type_=sa.String(length=512),
        existing_nullable=False,
    )
    op.alter_column(
        "static_stop_times",
        "trip_id",
        existing_type=sa.VARCHAR(length=128),
        type_=sa.String(length=512),
        existing_nullable=False,
    )
    op.alter_column(
        "static_trips",
        "trip_id",
        existing_type=sa.VARCHAR(length=128),
        type_=sa.String(length=512),
        existing_nullable=False,
    )
    op.alter_column(
        "temp_event_compare",
        "trip_id",
        existing_type=sa.VARCHAR(length=128),
        type_=sa.String(length=512),
        existing_nullable=False,
    )
    op.alter_column(
        "vehicle_trips",
        "trip_id",
        existing_type=sa.VARCHAR(length=128),
        type_=sa.String(length=512),
        existing_nullable=False,
    )
    op.alter_column(
        "vehicle_trips",
        "static_trip_id_guess",
        existing_type=sa.VARCHAR(length=128),
        type_=sa.String(length=512),
        existing_nullable=True,
    )
    op.drop_constraint(
        "vehicle_trips_unique_trip", "vehicle_trips", type_="unique"
    )
    op.create_unique_constraint(
        "vehicle_trips_unique_trip",
        "vehicle_trips",
        ["service_date", "trip_id"],
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(
        "vehicle_trips_unique_trip", "vehicle_trips", type_="unique"
    )
    op.create_unique_constraint(
        "vehicle_trips_unique_trip",
        "vehicle_trips",
        ["service_date", "route_id", "trip_id"],
    )
    op.alter_column(
        "vehicle_trips",
        "static_trip_id_guess",
        existing_type=sa.String(length=512),
        type_=sa.VARCHAR(length=128),
        existing_nullable=True,
    )
    op.alter_column(
        "vehicle_trips",
        "trip_id",
        existing_type=sa.String(length=512),
        type_=sa.VARCHAR(length=128),
        existing_nullable=False,
    )
    op.alter_column(
        "temp_event_compare",
        "trip_id",
        existing_type=sa.String(length=512),
        type_=sa.VARCHAR(length=128),
        existing_nullable=False,
    )
    op.alter_column(
        "static_trips",
        "trip_id",
        existing_type=sa.String(length=512),
        type_=sa.VARCHAR(length=128),
        existing_nullable=False,
    )
    op.alter_column(
        "static_stop_times",
        "trip_id",
        existing_type=sa.String(length=512),
        type_=sa.VARCHAR(length=128),
        existing_nullable=False,
    )
    op.alter_column(
        "static_route_patterns",
        "representative_trip_id",
        existing_type=sa.String(length=512),
        type_=sa.VARCHAR(length=128),
        existing_nullable=False,
    )
    op.drop_table("static_service_id_lookup")
    # ### end Alembic commands ###
