"""remove_metadata

Revision ID: 96187da84955
Revises: 45dedc21086e
Create Date: 2023-12-28 12:18:25.412282

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "96187da84955"
down_revision = "45dedc21086e"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "static_service_id_lookup",
        sa.Column("dummy_pk", sa.Integer(), nullable=False),
        sa.Column("route_id", sa.String(length=60), nullable=True),
        sa.Column("service_id", sa.String(length=60), nullable=True),
        sa.Column("service_date", sa.Integer(), nullable=True),
        sa.Column("static_version_key", sa.Integer(), nullable=True),
        sa.PrimaryKeyConstraint("dummy_pk"),
    )
    op.drop_index("ix_metadata_log_not_processed", table_name="metadata_log")
    op.drop_table("metadata_log")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "metadata_log",
        sa.Column("pk_id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column(
            "processed", sa.BOOLEAN(), autoincrement=False, nullable=True
        ),
        sa.Column(
            "process_fail", sa.BOOLEAN(), autoincrement=False, nullable=True
        ),
        sa.Column(
            "path", sa.VARCHAR(length=256), autoincrement=False, nullable=False
        ),
        sa.Column(
            "created_on",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=True,
        ),
        sa.PrimaryKeyConstraint("pk_id", name="metadata_log_pkey"),
        sa.UniqueConstraint("path", name="metadata_log_path_key"),
    )
    op.create_index(
        "ix_metadata_log_not_processed",
        "metadata_log",
        ["path"],
        unique=False,
        postgresql_where="(processed = false)",
    )
    op.drop_table("static_service_id_lookup")
    # ### end Alembic commands ###
