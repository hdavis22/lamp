name: Deploy To Environment
description: Build docker image and deploy it for each data pipeline.
permissions:
  id-token: write
  contents: read
inputs:
  docker-repo:
    description: ECR Docker repo to push to
    required: true
  env-name:
    description: One of 'prod', 'staging', or 'dev'
    required: true
  slack-webhook-url:
    description: Slack URL to post to
    required: true
  role-to-assume:
    description: AWS_ROLE_ARN
    required: true

runs:
  using: "composite"
  steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ inputs.role-to-assume }}
        aws-region: us-east-1
    - uses: mbta/actions/build-push-ecr@v2
      id: build-push
      with:
        docker-repo: ${{ inputs.docker-repo }}
        dockerfile-path: ./python_src/
    - uses: mbta/actions/deploy-ecs@v2
      id: deploy-ingestion
      with:
        ecs-cluster: lamp
        ecs-service: lamp-ingestion-${{ inputs.env-name }}
        docker-tag: ${{ steps.build-push.outputs.docker-tag }}
    - uses: mbta/actions/deploy-ecs@v2
      id: deploy-performance-manager
      with:
        ecs-cluster: lamp
        ecs-service: lamp-rail-performance-manager-${{ inputs.env-name }}
        docker-tag: ${{ steps.build-push.outputs.docker-tag }}
    - uses: mbta/actions/notify-slack-deploy@v1
      if: ${{ !cancelled() }}
      with:
        webhook-url: ${{ inputs.slack-webhook-url }}
        job-status: ${{ job.status }}
